{"version":"1.0.0","commands":{"init":{"id":"init","description":"Command used to initialize the 'clisci' configuration files, this command MUST be executed in the directory where the user wants to store the project.","pluginName":"@lampajr/clisci","pluginType":"core","aliases":[],"flags":{"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false},"server":{"name":"server","type":"boolean","char":"s","description":"Initialize a simple 'express.js' server for receive asynchronous responses","allowNo":false}},"args":[{"name":"file"}]},"invoke":{"id":"invoke","description":"Command used to invoke a target smart contract's function starting from a smart contract's descriptor.","pluginName":"@lampajr/clisci","pluginType":"core","aliases":[],"flags":{"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false},"path":{"name":"path","type":"option","char":"p","description":"provide a path where the config files are located, if not set, the current dir is used"},"format":{"name":"format","type":"option","char":"F","description":"descriptor format","default":"scdl"},"auth":{"name":"auth","type":"option","char":"a","description":"authorization token"},"jsonrpc":{"name":"jsonrpc","type":"option","char":"j","description":"jsonrpc request identifier","required":true},"contract":{"name":"contract","type":"option","char":"c","description":"contract's name","required":true},"function":{"name":"function","type":"option","char":"f","description":"name of the function to invoke","required":true},"val":{"name":"val","type":"option","char":"v","description":"value to be passed as parameter to the function, if more than one value is required you can set this flag multiple times"},"callback":{"name":"callback","type":"option","char":"u","description":"callback URL to which the gateway will forward all asynchronous responses"},"corrId":{"name":"corrId","type":"option","char":"i","description":"client-provided correlation identifier"},"doc":{"name":"doc","type":"option","char":"d","description":"degree of confidence"},"timeout":{"name":"timeout","type":"option","char":"t","description":"timeout that the gateway have to wait before block the operation"}},"args":[]},"scdl":{"id":"scdl","description":"Command used to gain information about local descriptors, to add new descriptors and to delete already stored descriptors.","pluginName":"@lampajr/clisci","pluginType":"core","aliases":[],"flags":{"help":{"name":"help","type":"boolean","char":"h","description":"show CLI help","allowNo":false},"list":{"name":"list","type":"boolean","char":"l","description":"list all scdl descriptors","allowNo":false},"pattern":{"name":"pattern","type":"option","char":"P","description":"set a pattern matching for descriptors to list"},"add":{"name":"add","type":"option","char":"a","description":"add a new descriptor"},"local":{"name":"local","type":"boolean","char":"L","description":"add a new descriptor from a local file path","allowNo":false},"remote":{"name":"remote","type":"boolean","char":"R","description":"add a new descriptor from a remote online registry","allowNo":false},"delete":{"name":"delete","type":"option","char":"d","description":"delete a local descriptor"},"path":{"name":"path","type":"option","char":"p","description":"provide a path where the config files are located, if not set, the current dir is used"}},"args":[{"name":"file"}]}}}